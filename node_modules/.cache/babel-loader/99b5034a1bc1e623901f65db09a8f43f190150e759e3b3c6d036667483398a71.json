{"ast":null,"code":"var _jsxFileName = \"/home/wasim/Desktop/practice Session/src/Learning/Topics/01-JSX/Nested.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NestedJsx = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is Nested JSX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"This can add multiple JSX elemnet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is a Nested jsx example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 12\n  }, this);\n};\n_c = NestedJsx;\nexport default NestedJsx;\nvar _c;\n$RefreshReg$(_c, \"NestedJsx\");","map":{"version":3,"names":["NestedJsx","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/wasim/Desktop/practice Session/src/Learning/Topics/01-JSX/Nested.jsx"],"sourcesContent":["const NestedJsx =()=>{\n    return <div>\n        <h1>This is Nested JSX</h1>\n        <h2>This can add multiple JSX elemnet</h2>\n\n        <p>This is a Nested jsx example</p>\n\n    </div>\n}\nexport default NestedJsx"],"mappings":";;AAAA,MAAMA,SAAS,GAAEA,CAAA,KAAI;EACjB,oBAAOC,OAAA;IAAAC,QAAA,gBACHD,OAAA;MAAAC,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BL,OAAA;MAAAC,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1CL,OAAA;MAAAC,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElC,CAAC;AACV,CAAC;AAAAC,EAAA,GARKP,SAAS;AASf,eAAeA,SAAS;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}